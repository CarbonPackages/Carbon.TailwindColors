{
  "version": 3,
  "sources": ["../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/manifest.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/createConsumerApi.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/registry/AbstractRegistry.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+positional-array-sorter@8.3.4/node_modules/@neos-project/positional-array-sorter/src/positionalArraySorter.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/registry/SynchronousRegistry.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/registry/SynchronousMetaRegistry.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/registry/index.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/prop-types/index.js", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../Private/Editor/node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.4/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../Private/Editor/src/Helper/OptionWithPreview.js", "css-modules:css-modules://R3_UnDNCyPVSrNxB9awSDOxGtZfnyHI6gHhkOQkyN7w.css", "../Private/Editor/src/Colors/utlis.js", "../Private/Editor/src/Colors/index.js", "css-modules:css-modules://Kr1OBoAXN-SgbAYB9mjtRyiSzKOW9qLjXC2zdOXIJ8Y.css", "../Private/Editor/src/Groups/index.js", "../Private/Editor/src/manifest.js", "../Private/Editor/src/index.js"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, null, "import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n// eslint-disable-next-line camelcase\nimport { SelectBox_Option_MultiLineWithThumbnail } from \"@neos-project/react-ui-components\";\n\nclass OptionWithPreview extends PureComponent {\n    static propTypes = {\n        option: PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            colors: PropTypes.arrayOf(PropTypes.string),\n        }),\n    };\n\n    generatePreview(colors) {\n        const length = colors.length;\n        const stop = 100 / length;\n\n        let svg =\n            '<svg viewBox=\"0 0 134 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><linearGradient x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\" id=\"bg\">';\n        colors.forEach((color, index) => {\n            const start = stop * index;\n            const end = stop * (index + 1);\n            svg += `<stop stop-color=\"${color}\" offset=\"${start}%\"></stop><stop stop-color=\"${color}\" offset=\"${end}%\"></stop>`;\n        });\n        svg += '</linearGradient></defs><rect fill=\"url(#bg)\" x=\"0\" y=\"0\" width=\"134\" height=\"100\"></rect></svg>';\n\n        return `data:image/svg+xml;base64,${btoa(svg)}`;\n    }\n\n    render() {\n        const { option } = this.props;\n\n        return (\n            <SelectBox_Option_MultiLineWithThumbnail\n                {...this.props}\n                imageUri={this.generatePreview(option.colors)}\n                label={option.label}\n            />\n        );\n    }\n}\n\nexport default OptionWithPreview;\n", ".carbon-tailwind-Wr0QEa-wrapper {\n  display: flex;\n}\n\n.carbon-tailwind-Wr0QEa-feedback {\n  border: 1px solid #3f3f3f;\n  flex: 1;\n  align-items: center;\n  height: 40px;\n  padding-left: 10px;\n  display: flex;\n}\n\n.carbon-tailwind-Wr0QEa-error {\n  color: #fff;\n  background-color: #ff460d;\n  margin-left: -16px;\n  margin-right: -16px;\n  padding: 10px 16px;\n}\n\n.carbon-tailwind-Wr0QEa-checkboard {\n  background-image: url(\"data:image/svg+xml, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"400\\\" height=\\\"400\\\" fill-opacity=\\\".25\\\"><rect x=\\\"200\\\" width=\\\"200\\\" height=\\\"200\\\" /><rect y=\\\"200\\\" width=\\\"200\\\" height=\\\"200\\\" /></svg>\");\n  background-size: 16px 16px;\n}\n\n.carbon-tailwind-Wr0QEa-group {\n  margin-top: 15px;\n  margin-bottom: 5px;\n}\n\n.carbon-tailwind-Wr0QEa-list {\n  flex: 1;\n  gap: 2px;\n  margin-bottom: 15px;\n  display: flex;\n  position: relative;\n}\n\n.carbon-tailwind-Wr0QEa-item {\n  cursor: pointer;\n  border: 0;\n  flex: 1;\n  height: 24px;\n  padding: 0;\n}\n\n.carbon-tailwind-Wr0QEa-itemactive {\n  z-index: 1;\n  box-shadow: 0 0 0 2px #00adee;\n}\n\n.carbon-tailwind-Wr0QEa-item:hover {\n  z-index: 1;\n  box-shadow: 0 0 0 2px #00adee;\n}\n\n.carbon-tailwind-Wr0QEa-item:focus {\n  z-index: 1;\n  box-shadow: 0 0 0 2px #00adee;\n}\n\n.carbon-tailwind-Wr0QEa-disabled {\n  cursor: not-allowed;\n  opacity: .65;\n}\n\n.carbon-tailwind-Wr0QEa-disabled > * {\n  pointer-events: none;\n}\n\n.carbon-tailwind-Wr0QEa-reset {\n  margin-left: 10px;\n}\n\n.carbon-tailwind-Wr0QEa-text-white {\n  color: #fff;\n}\n\n.carbon-tailwind-Wr0QEa-text-black {\n  color: #000;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjpudWxsLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFJQTs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7O0FBUUE7Ozs7O0FBS0E7Ozs7O0FBS0E7Ozs7Ozs7O0FBUUE7Ozs7Ozs7O0FBUUE7Ozs7O0FBQUE7Ozs7O0FBQUE7Ozs7O0FBT0E7Ozs7O0FBS0E7Ozs7QUFJQTs7OztBQUlBOzs7O0FBSUEiLCJzb3VyY2VzIjpbIi4uL1ByaXZhdGUvRWRpdG9yL3NyYy9Db2xvcnMvc3R5bGUubW9kdWxlLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIud3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5mZWVkYmFjayB7XG4gIGZsZXg6IDE7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzNmM2YzZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG4uZXJyb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY0NjBkO1xuICBjb2xvcjogI2ZmZjtcbiAgbWFyZ2luLWxlZnQ6IC0xNnB4O1xuICBtYXJnaW4tcmlnaHQ6IC0xNnB4O1xuICBwYWRkaW5nOiAxMHB4IDE2cHg7XG59XG5cbi5jaGVja2JvYXJkIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3N2Zyt4bWwsIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiNDAwXCIgaGVpZ2h0PVwiNDAwXCIgZmlsbC1vcGFjaXR5PVwiLjI1XCI+PHJlY3QgeD1cIjIwMFwiIHdpZHRoPVwiMjAwXCIgaGVpZ2h0PVwiMjAwXCIgLz48cmVjdCB5PVwiMjAwXCIgd2lkdGg9XCIyMDBcIiBoZWlnaHQ9XCIyMDBcIiAvPjwvc3ZnPicpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDE2cHggMTZweDtcbn1cblxuLmdyb3VwIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4ubGlzdCB7XG4gIGZsZXg6IDE7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAycHg7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5pdGVtIHtcbiAgaGVpZ2h0OiAyNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbiAgZmxleDogMTtcbn1cblxuLml0ZW1hY3RpdmUsXG4uaXRlbTpob3Zlcixcbi5pdGVtOmZvY3VzIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgMnB4ICMwMGFkZWU7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5kaXNhYmxlZCB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIG9wYWNpdHk6IDAuNjU7XG59XG5cbi5kaXNhYmxlZCA+ICoge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnJlc2V0IHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbi50ZXh0LXdoaXRlIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi50ZXh0LWJsYWNrIHtcbiAgY29sb3I6ICMwMDA7XG59XG4iXSwibmFtZXMiOltdfQ== */", "import style from \"./style.module.css\";\n\nfunction hex2rgb(hex) {\n    if (hex.length === 4) {\n        let r = hex.slice(1, 2);\n        let g = hex.slice(2, 3);\n        let b = hex.slice(3, 4);\n\n        r = parseInt(r + r, 16);\n        g = parseInt(g + g, 16);\n        b = parseInt(b + b, 16);\n\n        return { r, g, b };\n    }\n\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n\n    return [r, g, b];\n}\n\nfunction rgb2hsl(r, g, b) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r, g, b);\n    let cmax = Math.max(r, g, b);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let l = 0;\n\n    // Calculate hue\n    if (delta == 0) {\n        // No difference\n        h = 0;\n    } else if (cmax == r) {\n        // Red is max\n        h = ((g - b) / delta) % 6;\n    } else if (cmax == g) {\n        // Green is max\n        h = (b - r) / delta + 2;\n    } else {\n        // Blue is max\n        h = (r - g) / delta + 4;\n    }\n    h = Math.round(h * 60);\n    if (h < 0) {\n        // Make negative hues positive behind 360\u00B0\n        h += 360;\n    }\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    // Add % to s and l\n    s = s + \"%\";\n    l = l + \"%\";\n\n    return [h, s, l];\n}\n\nfunction colorValues(hex) {\n    const rgb = hex2rgb(hex);\n    const hsl = rgb2hsl(...rgb);\n\n    const rgbValues = rgb.join(\" \");\n    const hslValues = hsl.join(\" \");\n\n    return {\n        hex,\n        rgb: `rgb(${rgbValues})`,\n        hsl: `hsl(${hslValues})`,\n        rgbValues,\n        hslValues,\n    };\n}\n\nfunction getTextColor(hex) {\n    const rgb = hex2rgb(hex);\n    return rgb[0] * 0.299 + rgb[1] * 0.587 + rgb[2] * 0.114 > 186 ? \"text-black\" : \"text-white\";\n}\n\nfunction getPreviewBoxAttributes({ colors, value, placeholder }) {\n    const { group, strength } = value || {};\n\n    let hasValue = false;\n    if (group && strength) {\n        hasValue = !!(colors[group] && colors[group][strength]);\n    }\n\n    const color = hasValue ? colors[group][strength] : placeholder;\n    const title = hasValue ? `${capitalizeFirstLetter(group)} - ${strength}` : null;\n    const textColor = hasValue ? getTextColor(color) : null;\n\n    const classNames = [style.feedback, style[textColor]];\n\n    if (!hasValue && !placeholder) {\n        classNames.push(style.checkboard);\n    }\n\n    return {\n        className: classNames.filter((item) => !!item).join(\" \"),\n        style: { backgroundColor: color },\n        title,\n    };\n}\n\nfunction getPreviewBoxText({ colors, value, placeholder, i18n }) {\n    const strength = value.strength;\n\n    if (!strength) {\n        return placeholder ? \"\" : i18n.selectColor;\n    }\n\n    if (strength == \"0\") {\n        return i18n.white;\n    }\n\n    if (strength == \"1000\") {\n        return i18n.black;\n    }\n\n    const label = capitalizeFirstLetter(value.group);\n    return `${label} - ${strength}`;\n}\n\nfunction returnValues(options) {\n    let { group, strength, colors } = options;\n    if (!group || !colors[group]) {\n        return \"\";\n    }\n\n    strength = strength || null;\n\n    if (!strength) {\n        return { group };\n    }\n\n    const color = colors[group][strength];\n\n    if (!color) {\n        return { group };\n    }\n\n    return {\n        group,\n        strength,\n        ...colorValues(color),\n    };\n}\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport { getPreviewBoxAttributes, getPreviewBoxText, returnValues, capitalizeFirstLetter };\n", "import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, SelectBox } from \"@neos-project/react-ui-components\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport OptionWithPreview from \"../Helper/OptionWithPreview\";\nimport { returnValues, getPreviewBoxAttributes, getPreviewBoxText, capitalizeFirstLetter } from \"./utlis\";\nimport style from \"./style.module.css\";\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    config: globalRegistry.get(\"frontendConfiguration\").get(\"CarbonTailwindColors\"),\n}));\n\nclass Editor extends PureComponent {\n    static propTypes = {\n        value: PropTypes.shape({\n            group: PropTypes.string,\n            strength: PropTypes.string || PropTypes.number,\n            hex: PropTypes.string,\n            rgb: PropTypes.string,\n            hsl: PropTypes.string,\n            rgbValues: PropTypes.string,\n            hslValues: PropTypes.string,\n        }),\n        commit: PropTypes.func.isRequired,\n        i18nRegistry: PropTypes.object.isRequired,\n        options: PropTypes.shape({\n            allowEmpty: PropTypes.bool,\n            placeholder: PropTypes.string,\n            disabled: PropTypes.bool,\n            scheme: PropTypes.oneOf([\"grayscale\", \"color\"]),\n            disableStrength: PropTypes.arrayOf(PropTypes.string || PropTypes.number),\n            colors: PropTypes.objectOf(\n                PropTypes.shape({\n                    0: PropTypes.string,\n                    50: PropTypes.string,\n                    100: PropTypes.string,\n                    200: PropTypes.string,\n                    300: PropTypes.string,\n                    400: PropTypes.string,\n                    500: PropTypes.string,\n                    600: PropTypes.string,\n                    700: PropTypes.string,\n                    800: PropTypes.string,\n                    900: PropTypes.string,\n                    1000: PropTypes.string,\n                })\n            ),\n        }).isRequired,\n    };\n\n    onReset = () => {\n        this.props.commit(\"\");\n    };\n\n    static defaultOptions = {\n        allowEmpty: false,\n        disabled: false,\n        placeholder: null,\n        scheme: null,\n        disableStrength: [],\n    };\n\n    render() {\n        let { value, options, i18nRegistry, config } = this.props;\n        options = Object.assign({}, this.constructor.defaultOptions, options);\n        if (options.colors) {\n            config.colors = options.colors;\n        }\n        if (options.grayscale) {\n            config.grayscale = options.grayscale;\n        }\n\n        let colors = Object.assign({}, config.colors);\n        Object.entries(colors).forEach(([key, value]) => {\n            if (!value || !Object.keys(value).length) {\n                delete colors[key];\n            }\n        });\n\n        if (options.scheme === \"grayscale\") {\n            for (let color in colors) {\n                if (!config.grayscale.includes(color)) {\n                    delete colors[color];\n                }\n            }\n        } else if (options.scheme === \"color\") {\n            for (let color in colors) {\n                if (config.grayscale.includes(color)) {\n                    delete colors[color];\n                }\n            }\n        }\n        if (options.disableStrength.length) {\n            for (let color in colors) {\n                options.disableStrength.forEach((strength) => {\n                    delete colors[color][strength.toString()];\n                });\n            }\n        }\n\n        if (!colors) {\n            return (\n                <div className={style.error}>\n                    {i18nRegistry.translate(\"Carbon.TailwindColors:Main:noColorsDefined\")}\n                </div>\n            );\n        }\n\n        value = returnValues({\n            group: value.group,\n            strength: value.strength,\n            colors,\n        });\n        const { allowEmpty, disabled, placeholder } = options;\n\n        const selectBoxOptions = Object.keys(colors).map((value) => {\n            const colorItems = Object.assign({}, colors[value]);\n            const label = capitalizeFirstLetter(value);\n            return {\n                value,\n                colors: Object.values(colorItems),\n                label,\n            };\n        });\n\n        const colorsArray = [];\n        for (const group in colors) {\n            const groupValues = colors[group];\n            const label = capitalizeFirstLetter(group);\n            const values = [];\n            for (const strength in groupValues) {\n                const color = groupValues[strength];\n                let label = strength;\n                if (label == \"0\") {\n                    label = i18nRegistry.translate(\"Carbon.TailwindColors:Main:white\");\n                } else if (label == \"1000\") {\n                    label = i18nRegistry.translate(\"Carbon.TailwindColors:Main:black\");\n                }\n                values.push({\n                    strength,\n                    label,\n                    color,\n                });\n            }\n            colorsArray.push({\n                group,\n                label,\n                values,\n            });\n        }\n\n        const handleColorClick = (group, strength) => {\n            this.props.commit(returnValues({ group, strength, colors }));\n        };\n\n        const groupChangeHandler = (group) => {\n            const { strength } = this.props.value;\n            this.props.commit(returnValues({ group, strength, colors }));\n        };\n\n        const previewTextI18n = {\n            white: i18nRegistry.translate(\"Carbon.TailwindColors:Main:white\"),\n            black: i18nRegistry.translate(\"Carbon.TailwindColors:Main:black\"),\n            selectColor: i18nRegistry.translate(\"Carbon.TailwindColors:Main:selectColor\"),\n        };\n\n        return (\n            <div className={disabled && style.disabled}>\n                <div className={style.wrapper}>\n                    <div {...getPreviewBoxAttributes({ colors, value, placeholder })}>\n                        {getPreviewBoxText({ colors, value, placeholder, i18n: previewTextI18n })}\n                    </div>\n                    {allowEmpty && (\n                        <div className={style.reset}>\n                            <IconButton\n                                style=\"lighter\"\n                                icon=\"times\"\n                                title={i18nRegistry.translate(\"Carbon.TailwindColors:Main:resetColor\")}\n                                onClick={this.onReset}\n                            />\n                        </div>\n                    )}\n                </div>\n                <div className={style.group}>\n                    <SelectBox\n                        options={selectBoxOptions}\n                        value={value && value.group}\n                        placeholder={i18nRegistry.translate(\"Carbon.TailwindColors:Main:selectColorGroup\")}\n                        allowEmpty={false}\n                        onValueChange={groupChangeHandler}\n                        ListPreviewElement={OptionWithPreview}\n                    />\n                </div>\n                {colorsArray.map((item) => {\n                    const isActiveGroup = value && value.group == item.group;\n                    return (\n                        isActiveGroup && (\n                            <div className={style.list}>\n                                {item.values.map((entry) => (\n                                    <button\n                                        key={item.group + entry.strength}\n                                        className={[\n                                            style.item,\n                                            isActiveGroup && entry.strength == value.strength && style.itemactive,\n                                        ].join(\" \")}\n                                        style={{ backgroundColor: entry.color }}\n                                        title={entry.label}\n                                        onClick={() => handleColorClick(item.group, entry.strength)}\n                                    ></button>\n                                ))}\n                            </div>\n                        )\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default neosifier(Editor);\n", ".carbon-tailwind-gRELtW-error {\n  color: #fff;\n  background-color: #ff460d;\n  margin-left: -16px;\n  margin-right: -16px;\n  padding: 10px 16px;\n}\n\n.carbon-tailwind-gRELtW-disabled {\n  cursor: not-allowed;\n  opacity: .65;\n}\n\n.carbon-tailwind-gRELtW-disabled > * {\n  pointer-events: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjpudWxsLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7Ozs7O0FBS0EiLCJzb3VyY2VzIjpbIi4uL1ByaXZhdGUvRWRpdG9yL3NyYy9Hcm91cHMvc3R5bGUubW9kdWxlLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY0NjBkO1xuICBjb2xvcjogI2ZmZjtcbiAgbWFyZ2luLWxlZnQ6IC0xNnB4O1xuICBtYXJnaW4tcmlnaHQ6IC0xNnB4O1xuICBwYWRkaW5nOiAxMHB4IDE2cHg7XG59XG5cbi5kaXNhYmxlZCB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIG9wYWNpdHk6IDAuNjU7XG59XG5cbi5kaXNhYmxlZCA+ICoge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbiJdLCJuYW1lcyI6W119 */", "import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, SelectBox } from \"@neos-project/react-ui-components\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport OptionWithPreview from \"../Helper/OptionWithPreview\";\nimport style from \"./style.module.css\";\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    config: globalRegistry.get(\"frontendConfiguration\").get(\"CarbonTailwindColors\"),\n}));\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass Editor extends PureComponent {\n    static propTypes = {\n        value: PropTypes.string,\n        commit: PropTypes.func.isRequired,\n        i18nRegistry: PropTypes.object.isRequired,\n        options: PropTypes.shape({\n            allowEmpty: PropTypes.bool,\n            placeholder: PropTypes.string,\n            scheme: PropTypes.oneOf([\"grayscale\", \"color\"]),\n            disabled: PropTypes.bool,\n        }).isRequired,\n    };\n\n    onReset = () => {\n        this.props.commit(\"\");\n    };\n\n    static defaultOptions = {\n        allowEmpty: false,\n        disabled: false,\n        placeholder: null,\n        scheme: null,\n    };\n\n    render() {\n        let { value, options, i18nRegistry, config } = this.props;\n\n        options = Object.assign({}, this.constructor.defaultOptions, options);\n        if (options.colors) {\n            config.colors = options.colors;\n        }\n        if (options.grayscale) {\n            config.grayscale = options.grayscale;\n        }\n\n        let colors = Object.assign({}, config.colors);\n        Object.entries(colors).forEach(([key, value]) => {\n            if (!value || !Object.keys(value).length) {\n                delete colors[key];\n            }\n        });\n\n        if (options.scheme === \"grayscale\") {\n            for (let color in colors) {\n                if (!config.grayscale.includes(color)) {\n                    delete colors[color];\n                }\n            }\n        } else if (options.scheme === \"color\") {\n            for (let color in colors) {\n                if (config.grayscale.includes(color)) {\n                    delete colors[color];\n                }\n            }\n        }\n\n        if (!colors) {\n            return (\n                <div className={style.error}>\n                    {i18nRegistry.translate(\"Carbon.TailwindColors:Main:noColorsDefined\")}\n                </div>\n            );\n        }\n        const { allowEmpty, disabled, placeholder } = options;\n\n        const selectBoxOptions = Object.keys(colors).map((value) => {\n            const colorItems = Object.assign({}, colors[value]);\n            const label = capitalizeFirstLetter(value);\n            return {\n                value,\n                colors: Object.values(colorItems),\n                label,\n            };\n        });\n\n        const onValueChange = (value) => {\n            this.props.commit(value);\n        };\n\n        return (\n            <div className={disabled && style.disabled}>\n                <SelectBox\n                    options={selectBoxOptions}\n                    value={value}\n                    placeholder={placeholder || i18nRegistry.translate(\"Carbon.TailwindColors:Main:selectColorGroup\")}\n                    allowEmpty={allowEmpty}\n                    onValueChange={onValueChange}\n                    ListPreviewElement={OptionWithPreview}\n                />\n            </div>\n        );\n    }\n}\n\nexport default neosifier(Editor);\n", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nimport Colors from \"./Colors\";\nimport Groups from \"./Groups\";\n\nmanifest(\"Carbon.TailwindColors:Editors\", {}, (globalRegistry) => {\n    const editorsRegistry = globalRegistry.get(\"inspector\").get(\"editors\");\n\n    editorsRegistry.set(\"Carbon.TailwindColors/Colors\", {\n        component: Colors,\n    });\n\n    editorsRegistry.set(\"Carbon.TailwindColors/Groups\", {\n        component: Groups,\n    });\n});\n", "require(\"./manifest\");\n"],
  "mappings": "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",
  "names": ["init_manifest", "__esmMin", "init_createConsumerApi", "__esmMin", "init_manifest", "readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "init_AbstractRegistry", "__esmMin", "init_positionalArraySorter", "__esmMin", "init_SynchronousRegistry", "__esmMin", "init_AbstractRegistry", "init_positionalArraySorter", "init_SynchronousMetaRegistry", "__esmMin", "init_SynchronousRegistry", "init_registry", "__esmMin", "init_SynchronousRegistry", "init_SynchronousMetaRegistry", "dist_default", "init_dist", "__esmMin", "init_createConsumerApi", "init_readFromConsumerApi", "init_registry", "readFromConsumerApi", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_prop_types", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "import_react", "import_prop_types", "import_react_ui_components", "OptionWithPreview", "OptionWithPreview_default", "init_OptionWithPreview", "__esmMin", "colors", "stop", "svg", "color", "index", "start", "end", "option", "React", "__publicField", "PropTypes", "init_R3_UnDNCyPVSrNxB9awSDOxGtZfnyHI6gHhkOQkyN7w", "__esmMin", "hex2rgb", "hex", "r", "g", "b", "rgb2hsl", "cmin", "cmax", "delta", "h", "s", "l", "colorValues", "rgb", "hsl", "rgbValues", "hslValues", "getTextColor", "getPreviewBoxAttributes", "colors", "value", "placeholder", "group", "strength", "hasValue", "color", "title", "capitalizeFirstLetter", "textColor", "classNames", "style_default", "item", "getPreviewBoxText", "i18n", "returnValues", "options", "string", "init_utlis", "__esmMin", "init_style", "import_react", "import_prop_types", "import_react_ui_components", "import_neos_ui_decorators", "neosifier", "Editor", "Colors_default", "init_Colors", "__esmMin", "init_OptionWithPreview", "init_utlis", "init_style", "globalRegistry", "__publicField", "value", "options", "i18nRegistry", "config", "colors", "key", "color", "strength", "React", "style_default", "returnValues", "allowEmpty", "disabled", "placeholder", "selectBoxOptions", "colorItems", "label", "capitalizeFirstLetter", "colorsArray", "group", "groupValues", "values", "handleColorClick", "groupChangeHandler", "previewTextI18n", "getPreviewBoxAttributes", "getPreviewBoxText", "OptionWithPreview_default", "item", "isActiveGroup", "entry", "PropTypes", "init_Kr1OBoAXN_SgbAYB9mjtRyiSzKOW9qLjXC2zdOXIJ8Y", "__esmMin", "capitalizeFirstLetter", "string", "import_react", "import_prop_types", "import_react_ui_components", "import_neos_ui_decorators", "neosifier", "Editor", "Groups_default", "init_Groups", "__esmMin", "init_OptionWithPreview", "init_style", "globalRegistry", "__publicField", "value", "options", "i18nRegistry", "config", "colors", "key", "color", "React", "style_default", "allowEmpty", "disabled", "placeholder", "selectBoxOptions", "colorItems", "label", "onValueChange", "OptionWithPreview_default", "PropTypes", "manifest_exports", "init_manifest", "__esmMin", "init_dist", "init_Colors", "init_Groups", "dist_default", "globalRegistry", "editorsRegistry", "Colors_default", "Groups_default"]
}
